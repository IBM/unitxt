from datasets import load_dataset_builder
from prepare.cards.mmlu import (
    CONTEXT_MMLU_TEMPLATES_NO_INTRO,
    multiple_choice_inputs_outputs,
    multiple_choice_preprocess,
)
from src.unitxt.blocks import (
    AddFields,
    FormTask,
    InputOutputTemplate,
    LoadHF,
    MapInstanceValues,
    NormalizeListFields,
    SplitRandomMix,
    TaskCard,
    TemplatesList,
)
from src.unitxt.catalog import add_to_catalog
from src.unitxt.operators import (
    CopyFields,
    IndexOf,
    JoinStr,
    ListFieldValues,
    RenameFields,
    TakeByField,
    ZipFieldValues,
)
from src.unitxt.test_utils.card import test_card

# numbering = tuple(str(x) for x in range(200))
numbering = list("ABCDEFGHIJKLMNOPQRSTUVWXYZ")
expected_answer = "number"  # 'number_and_answer' #'number'

language_codes = [
    "acm_Arab",
    "arz_Arab",
    "ceb_Latn",
    "fin_Latn",
    "hin_Deva",
    "ita_Latn",
    "khm_Khmr",
    "lvs_Latn",
    "npi_Deva",
    "pol_Latn",
    "slv_Latn",
    "swe_Latn",
    "tso_Latn",
    "xho_Latn",
    "afr_Latn",
    "asm_Beng",
    "ces_Latn",
    "fra_Latn",
    "hin_Latn",
    "jav_Latn",
    "kin_Latn",
    "mal_Mlym",
    "npi_Latn",
    "por_Latn",
    "sna_Latn",
    "swh_Latn",
    "tur_Latn",
    "yor_Latn",
    "als_Latn",
    "azj_Latn",
    "ckb_Arab",
    "fuv_Latn",
    "hrv_Latn",
    "jpn_Jpan",
    "kir_Cyrl",
    "mar_Deva",
    "nso_Latn",
    "snd_Arab",
    "tam_Taml",
    "ukr_Cyrl",
    "zho_Hans",
    "amh_Ethi",
    "bam_Latn",
    "dan_Latn",
    "gaz_Latn",
    "hun_Latn",
    "kac_Latn",
    "kor_Hang",
    "mkd_Cyrl",
    "nya_Latn",
    "ron_Latn",
    "som_Latn",
    "tel_Telu",
    "urd_Arab",
    "zho_Hant",
    "apc_Arab",
    "ben_Beng",
    "deu_Latn",
    "grn_Latn",
    "hye_Armn",
    "kan_Knda",
    "lao_Laoo",
    "mlt_Latn",
    "ory_Orya",
    "rus_Cyrl",
    "sot_Latn",
    "tgk_Cyrl",
    "urd_Latn",
    "zsm_Latn",
    "arb_Arab",
    "ben_Latn",
    "ell_Grek",
    "guj_Gujr",
    "ibo_Latn",
    "kat_Geor",
    "lin_Latn",
    "mri_Latn",
    "pan_Guru",
    "shn_Mymr",
    "spa_Latn",
    "tgl_Latn",
    "uzn_Latn",
    "zul_Latn",
    "arb_Latn",
    "bod_Tibt",
    "eng_Latn",
    "hat_Latn",
    "ilo_Latn",
    "kaz_Cyrl",
    "lit_Latn",
    "mya_Mymr",
    "pbt_Arab",
    "sin_Latn",
    "srp_Cyrl",
    "tha_Thai",
    "vie_Latn",
    "ars_Arab",
    "bul_Cyrl",
    "est_Latn",
    "hau_Latn",
    "ind_Latn",
    "kea_Latn",
    "lug_Latn",
    "nld_Latn",
    "pes_Arab",
    "sin_Sinh",
    "ssw_Latn",
    "tir_Ethi",
    "war_Latn",
    "ary_Arab",
    "cat_Latn",
    "eus_Latn",
    "heb_Hebr",
    "isl_Latn",
    "khk_Cyrl",
    "luo_Latn",
    "nob_Latn",
    "plt_Latn",
    "slk_Latn",
    "sun_Latn",
    "tsn_Latn",
    "wol_Latn",
]

for lang in language_codes:
    card = TaskCard(
        loader=LoadHF(path="facebook/belebele", name=lang),
        preprocess_steps=[
            # "splitters.test_only",
            AddFields({"numbering": numbering}),
            ListFieldValues(fields=["mc_answer1", "mc_answer2", "mc_answer3", "mc_answer4"], to_field="choices"),
            MapInstanceValues(mappers={"correct_answer_num": {"1": "A", "2": "B", "3": "C", "4": "D"}}),
            IndexOf(search_in="numbering", index_of="correct_answer_num", to_field="index"),
            *multiple_choice_preprocess(
                question="question",
                context="flores_passage",
                numbering="numbering",
                choices="choices",
                topic="dialect",
                label_index="index",
                expected_answer=expected_answer,
            ),
        ],
        task=FormTask(
            **multiple_choice_inputs_outputs(context=True),
            metrics=["metrics.accuracy"],
        ),
        templates=CONTEXT_MMLU_TEMPLATES_NO_INTRO,
    )
    test_card(card, tested_split="test")
    add_to_catalog(card, f"cards.belebele.{lang}", overwrite=True)

{
    "__type__": "task_card",
    "loader": {
        "__type__": "load_hf",
        "path": "kasnerz/scigen",
        "data_classification_policy": [
            "public"
        ]
    },
    "preprocess_steps": [
        {
            "__type__": "filter_by_condition",
            "values": {
                "table_content_values": "[]"
            },
            "condition": "ne"
        },
        {
            "__type__": "construct_table_structure",
            "fields": [
                "table_column_names",
                "table_content_values"
            ],
            "to_field": "table"
        },
        {
            "__type__": "serialize_table_as_indexed_row_major",
            "field_to_field": [
                [
                    "table",
                    "input"
                ]
            ]
        },
        {
            "__type__": "set",
            "fields": {
                "type_of_input": "table"
            }
        },
        {
            "__type__": "set",
            "fields": {
                "type_of_output": "text"
            }
        },
        {
            "__type__": "rename_fields",
            "field_to_field": {
                "text": "output",
                "table_caption": "caption"
            }
        }
    ],
    "task": {
        "__type__": "task",
        "input_fields": {
            "input": "str",
            "type_of_input": "str",
            "caption": "str",
            "type_of_output": "str"
        },
        "reference_fields": {
            "output": "str"
        },
        "prediction_type": "str",
        "metrics": [
            "metrics.llm_as_judge.rating.llama_3_70b_instruct_ibm_genai_template_table2text_single_turn_with_reference"
        ],
        "augmentable_inputs": [
            "input"
        ],
        "defaults": {
            "type_of_output": "Text"
        }
    },
    "templates": {
        "__type__": "templates_list",
        "items": [
            {
                "__type__": "input_output_template",
                "input_format": "Given the following {type_of_input} and caption, generate the corresponding {type_of_output}.\n{type_of_input}: \n{input} \ncaption: \n{caption} \n{type_of_output}:",
                "output_format": "{output}",
                "postprocessors": [
                    "processors.take_first_non_empty_line",
                    "processors.lower_case_till_punc"
                ]
            }
        ]
    }
}
